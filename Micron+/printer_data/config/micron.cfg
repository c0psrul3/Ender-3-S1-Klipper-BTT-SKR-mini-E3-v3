# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Micron Cfg for BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section



# BTT Octopus MAX EZ
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_1E002B001251313236343430-if00
restart_method: command


[board_pins]
aliases:
aliases_heater:
    BED=PF5, HE0=PF6, HE1=PA0, HE2=PF9, HE3=PF7
aliases_thermistor:
    THB=PB1, TH0=PB0, TH1=PC5, TH2=PC4, TH3=PA7
aliases_motor:
    M1_DIR=PC14, M1_STEP=PC13, M1_EN=PE6,  M1_CS=PG14,
    M2_DIR=PE5,  M2_STEP=PE4,  M2_EN=PE3,  M2_CS=PG13,
    M3_DIR=PE0,  M3_STEP=PE1,  M3_EN=PE2,  M3_CS=PG12,
    M4_DIR=PB9,  M4_STEP=PB8,  M4_EN=PB7,  M4_CS=PG11,
    M5_DIR=PB4,  M5_STEP=PB5,  M5_EN=PB6,  M5_CS=PG10,
    M6_DIR=PB3,  M6_STEP=PG15, M6_EN=PD5,  M6_CS=PG9,
    #M7_DIR=PD2,  M7_STEP=PD3,  M7_EN=PD4,  M7_CS=PD7,
    #M8_DIR=PA9,  M8_STEP=PA10, M8_EN=PA15, M8_CS=PD6,
    #M9_DIR=PC7,  M9_STEP=PA8,  M9_EN=PC9,  M9_CS=PG8,
    #M10_DIR=PC6, M10_STEP=PG6, M10_EN=PC8, M10_CS=PG7
aliases_endstop:
    MIN1=PF0, MIN2=PF2, MIN3=PF4, MIN4=PF3, MIN5=PF1, MIN6=PC15
aliases_filament_sensor:
    FILAMENT_ENCODER=PF1
aliases_fan:
    FAN0=PA6, FAN1=PA5, FAN2=PA4, FAN3=PA3,
    FAN4=PA1, FAN4_TACH=PC3,
    FAN5=PF8, FAN5_TACH=PC1,
    FAN6=PA2, FAN6_TACH=PC2
aliases_display:
    # FPC header, Aliases EXP1 & EXP2 for mini12864
    EXP1_1=PG2, EXP1_2=PD15,
    EXP1_3=PD14, EXP1_4=PD13,
    EXP1_5=PD12, EXP1_6=PD11,
    EXP1_7=PD10, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PG5, EXP2_4=PE11,
    EXP2_5=PG4, EXP2_6=PE14,
    EXP2_7=PG3, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>
#aliases_spi:
#    SPI1_1=<GND>, SPI1_2=PE12, SPI1_3=PE13, SPI1_4=<GND>,
#    SPI2_1=<5V>,  SPI2_2=PF14, SPI2_3=PE14, SPI2_4=<3.3V>
#aliases_can:
#    CAN_L=PD0, CAN_H=PD1
aliases_wifi:
    WIFI1=<GND>, WIFI2=<3.3V>,      # I2C4_SMBA=PF13
    WIFI3=PG1,   WIFI4=PC12,        # I2C5_SMBA,SPI6_SCK,I2S6_CK,SPI3_MOSI,I2S3_SDO,USART3_CK,UART5_TX=PC12
    WIFI5=<NC>,  WIFI6=PC11,        # I2C5_SCL,SPI3_MISO,I2S3_SDI,USART3_RX,UART4_RX=PC11
    WIFI7=PG0,   WIFI8=PC10,        # I2C5_SDA,SPI3_SCK,I2S3_CK,USART3_TX,UART4_TX=PC10
    WIFI9=PF15,  WIFI10=<NC>,       # I2C4_SDA=PF15
    WIFI11=<NC>, WIFI12=<NC>,       # 
    WIFI13=PE8,  WIFI14=<NC>,       # UART7_TX=PE8
    WIFI15=PE7,  WIFI16=PB2         # UART7_RX=PE7  , SPI3_MOSI=PB2,  I2S3_SDO=PB2
#aliases_i2c5:
#    I2C5_SCL=PC11, I2C5_SDA=PC10
aliases_tft:
    TFT_1=PD8, TFT_2=PD9 # TFT_RST=<RST>
aliases_probe:
    PROBE_14=PB14, PROBE_15=PB15, PROBE_IND=PF11
aliases_fws:
    FWS_PC0=PC0, FWS_PF10=PF10
aliases_power:
    POWER_SWITCH=PF13, PWR_DET=PF12
aliases_rgb:
    RGB1=PE10, RGB2=PE9

# [duplicate_pin_override]
# pins:
# #   A comma separated list of pins that may be used multiple times in
# #   a config file without normal error checks. This parameter must be
# #   provided.



[printer]
kinematics: corexy
max_velocity: 300
max_accel: 3000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_6
[stepper_x]
step_pin: M6_STEP
dir_pin: !M6_DIR
enable_pin: !M6_EN
rotation_distance: 32
microsteps: 32
full_steps_per_rotation:200
position_min: 0
position_endstop: 170
position_max: 170
homing_positive_dir: true
#endstop_pin: EBB36:LIMIT_X
homing_retract_dist: 5
homing_speed: 50   #Max 100
[tmc2209 stepper_x]
uart_pin: M6_CS
interpolate: false
run_current: 0.6
#hold_current: 0.2
sense_resistor: 0.110
stealthchop_threshold: 0
[gcode_macro STEPPER_BUZZ_GANTRY_LEFT]
variable_stepper: 'stepper_x'
gcode:
  STEPPER_BUZZ stepper={stepper}
[gcode_macro STEPPER_BUZZ_MOTOR_6]
variable_stepper: 'stepper_x'
gcode:
  STEPPER_BUZZ stepper={stepper}


##  A Stepper - Right
##  Connected to MOTOR_5
[stepper_y]
step_pin: M5_STEP
dir_pin: !M5_DIR
enable_pin: !M5_EN
rotation_distance: 32
microsteps: 32
full_steps_per_rotation:200
position_min: -20
position_endstop: 170
position_max: 170
homing_positive_dir: true
endstop_pin: MIN2
homing_retract_dist: 5
homing_speed: 50   #Max 100
[tmc2209 stepper_y]
uart_pin: M5_CS
interpolate: false
run_current: 0.6
#hold_current: 0.2
sense_resistor: 0.110
stealthchop_threshold: 0
[gcode_macro STEPPER_BUZZ_GANTRY_RIGHT]
variable_stepper: 'stepper_y'
gcode:
  STEPPER_BUZZ stepper={stepper}
[gcode_macro STEPPER_BUZZ_MOTOR_5]
variable_stepper: 'stepper_y'
gcode:
  STEPPER_BUZZ stepper={stepper}



#####################################################################
#   Z Stepper Settings
#
#   NEMA14 1.8 deg
#   LDO-36STH52-1504AH(VRN)
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_4
[stepper_z]
step_pin: M4_STEP
dir_pin: !M4_DIR
enable_pin: !M4_EN
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop    ## NOTE: position_endstop is not valid if endstop_pin=probe
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#endstop_pin: tmc2209_stepper_z:virtual_endstop
#position_endstop: -1.275
position_max: 165     ## with lid off, can use 171
position_min: -10
homing_speed: 18
second_homing_speed: 3
#homing_retract_dist: 3
homing_retract_dist: 0 # sensorless, eddy, beacon needs this to be set to 0
[tmc2209 stepper_z]
uart_pin: M4_CS
#diag_pin: ^MIN4  ## sensorless jumper not enabled
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0
driver_SGTHRS: 175  # 255 is most sensitive value, 0 is least sensitive (180
[gcode_macro STEPPER_BUZZ_FRONT_LEFT]
variable_stepper: 'stepper_z'
gcode:
  STEPPER_BUZZ stepper={stepper}
[gcode_macro STEPPER_BUZZ_MOTOR_3]
variable_stepper: 'stepper_z'
gcode:
  STEPPER_BUZZ stepper={stepper}


##  Z1 Stepper - Rear Left
##  Connected to MOTOR_1
[stepper_z1]
step_pin: M1_STEP
dir_pin: M1_DIR
enable_pin: !M1_EN
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32
#endstop_pin: tmc2209_stepper_z1:virtual_endstop
[tmc2209 stepper_z1]
uart_pin: M1_CS
#diag_pin: ^MIN1 ## sensorless
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0
driver_SGTHRS: 175
[gcode_macro STEPPER_BUZZ_REAR_LEFT]
variable_stepper: 'stepper_z1'
gcode:
  STEPPER_BUZZ stepper={stepper}
[gcode_macro STEPPER_BUZZ_MOTOR_1]
variable_stepper: 'stepper_z1'
gcode:
  STEPPER_BUZZ stepper={stepper}


##  Z2 Stepper - Rear Right
##  Connected to MOTOR_2
[stepper_z2]
step_pin: M2_STEP
dir_pin: !M2_DIR
enable_pin: !M2_EN
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32
#endstop_pin: tmc2209_stepper_z2:virtual_endstop
[tmc2209 stepper_z2]
uart_pin: M2_CS
#diag_pin: ^MIN2  ## sensorless jumper not enabled
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0
driver_SGTHRS: 175
[gcode_macro STEPPER_BUZZ_REAR_RIGHT]
variable_stepper: 'stepper_z2'
gcode:
  STEPPER_BUZZ stepper={stepper}
[gcode_macro STEPPER_BUZZ_MOTOR_2]
variable_stepper: 'stepper_z2'
gcode:
  STEPPER_BUZZ stepper={stepper}


##  Z3 Stepper - Front Right
##  Connected to MOTOR_3
[stepper_z3]
step_pin: M3_STEP
dir_pin: M3_DIR
enable_pin: !M3_EN
rotation_distance: 32
gear_ratio: 64:16
microsteps: 32
#endstop_pin: tmc2209_stepper_z3:virtual_endstop
[tmc2209 stepper_z3]
uart_pin: M3_CS
#diag_pin: ^MIN3  ## sensorless jumper not enabled
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0
driver_SGTHRS: 175
[gcode_macro STEPPER_BUZZ_FRONT_RIGHT]
variable_stepper: 'stepper_z3'
gcode:
  STEPPER_BUZZ stepper={stepper}
[gcode_macro STEPPER_BUZZ_MOTOR_3]
variable_stepper: 'stepper_z3'
gcode:
  STEPPER_BUZZ stepper={stepper}


# Motor-7
#[extruder2]
#step_pin: PD3
#dir_pin: PD2
#enable_pin: !PD4
#heater_pin: HE2
#sensor_pin: TH2
#...

# Motor-8
#[extruder3]
#step_pin: PA10
#dir_pin: PA9
#enable_pin: !PA15
#heater_pin: HE3
#sensor_pin: TH3
#...

# Motor-9
#[extruder4]
#step_pin: PA8
#dir_pin: PC7
#enable_pin: !PC9
#...

# Motor-10
#[extruder5]
#step_pin: PG6
#dir_pin: PC6
#enable_pin: !PC8
#...


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  Heater Pin - BED_OUT - PF5
##  Thermistor - TB - PB1
heater_pin: BED
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: THB
min_temp: 0
max_temp: 130
max_power: 0.6
# control = pid
# pid_Kp=33.688
# pid_Ki=1.797
# pid_Kd=157.911


#####################################################################
#   Fan Control
#####################################################################

## OctopusMAX - VFAN0
#[fan_generic fan0]
#pin: PA6

## OctopusMAX - VFAN1
#[heater_fan hotend_fan1]
###  Hotend Fan - FAN1
#pin: PA5
#max_power: 1.0
#kick_start_time: 0.5
#heater: extruder
#heater_temp: 50.0
###  If you are experiencing back flow, you can reduce fan_speed
##fan_speed: 1.0

#[fan_generic Raspberry_Pi4]
#pin: FAN2
#max_power: 0.5

## OctopusMAX - VFAN3
#[fan_generic fan3]
#pin: FAN3


[heater_fan 3DPFilter]
##  MapleLeaf Nano Filter (fan) - FAN4
pin: FAN4
max_power: 1.0
kick_start_time: 0.200
off_below: 0.5
#tachometer_pin: FAN4_TACH
#tachometer_ppr: 2
#tachometer_poll_interval:
heater: extruder
heater_temp: 50.0
fan_speed: 1.0


## OctopusMAX - FAN5 (used by `controller_fan`)
#[controller_fan NoctuaA6x25FLX]
#pin: FAN5
#tachometer_pin: FAN5_TACH

## OctopusMAX - FAN6
#[heater_fan fan6]
#pin: FAN6
#tachometer_pin: FAN6_TACH


# # Undercarriage Temp Control Fan
# [temperature_fan my_temp_fan]
# pin: !PC1
# #max_power:
# #shutdown_speed:
# #cycle_time:
# #hardware_pwm:
# #kick_start_time:
# #off_below:
# tachometer_pin: PF8
# tachometer_ppr: 2
# #tachometer_poll_interval:
# #sensor_type:
# #sensor_pin:
# #control:
# #max_delta:
# #min_temp:
# #max_temp:
# #   See the "extruder" section for a description of the above parameters.
# #pid_Kp:
# #pid_Ki:
# #pid_Kd:
# #   The proportional (pid_Kp), integral (pid_Ki), and derivative
# #   (pid_Kd) settings for the PID feedback control system. Klipper
# #   evaluates the PID settings with the following general formula:
# #     fan_pwm = max_power - (Kp*e + Ki*integral(e) - Kd*derivative(e)) / 255
# #   Where "e" is "target_temperature - measured_temperature" and
# #   "fan_pwm" is the requested fan rate with 0.0 being full off and
# #   1.0 being full on. The pid_Kp, pid_Ki, and pid_Kd parameters must
# #   be provided when the PID control algorithm is enabled.
# #pid_deriv_time: 2.0
# #   A time value (in seconds) over which temperature measurements will
# #   be smoothed when using the PID control algorithm. This may reduce
# #   the impact of measurement noise. The default is 2 seconds.
# #target_temp: 40.0
# #   A temperature (in Celsius) that will be the target temperature.
# #   The default is 40 degrees.
# #max_speed: 1.0
# #   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
# #   will be set to when the sensor temperature exceeds the set value.
# #   The default is 1.0.
# #min_speed: 0.3
# #   The minimum fan speed (expressed as a value from 0.0 to 1.0) that
# #   the fan will be set to for PID temperature fans.
# #   The default is 0.3.
# #gcode_id:
# #   If set, the temperature will be reported in M105 queries using the
# #   given id. The default is to not report the temperature via M105.


#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800


## https://www.klipper3d.org/Config_Reference.html#quad_gantry_level
[quad_gantry_level]
##  Gantry Corners for Micron+ Build
gantry_corners:
   -10,-30
   180,210
#  Probe points
points:
   10,0
   10,145
   150,145
   150,0
#   A newline separated list of four X, Y points that should be probed
#   during a QUAD_GANTRY_LEVEL command. Order of the locations is
#   important, and should correspond to Z, Z1, Z2, and Z3 location in
#   order. This parameter must be provided. For maximum accuracy,
#   ensure your probe offsets are configured.
speed: 100
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#horizontal_move_z: 15
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
retries: 20
#   Number of times to retry if the probed points aren't within
#   tolerance.
retry_tolerance: 0.0015
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance.
max_adjust: 3.5
#   Safety limit if an adjustment greater than this value is requested
#   quad_gantry_level will abort.


#--------------------------------------------------------------------

#####################################################################
# Other Octopus MAX configs
#####################################################################

#[bltouch]
#sensor_pin: PROBE_15
#control_pin: PROBE_14

# Proximity switch
#[probe]
#pin: PROBE_IND

#[output_pin ps_on_pin]
#pin: PF13

#[output_pin pf12_pin]
#pin: PF12

## Neopixel Jewel
[neopixel panel_leds]
pin: RGB1
chain_count: 7
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0
color_order: GRBW

## TODO: nozzle wiper to replace neopixel2 (PE9)
[neopixel matchstick_leds]
pin: RGB2
chain_count: 24
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
color_order: GRB


#[hall_filament_width_sensor]
#adc1: FWS_PC0
#adc2: FWS_PF10

# #[adxl345]
# #cs_pin: PF14
# #spi_bus: spi4

# # Environmental Sensor (via SPI)
# #[temperature_sensor BME680]
# #sensor_type: BME680
# #sensor_pin: PA7


## PT1000 sensor for heated bed
[temperature_sensor chamber]
sensor_type: PT1000
sensor_pin: PA7
pullup_resistor: 2200
#min_temp:
#max_temp: 300
#gcode_id:
#   See the "heater_generic" section for the definition of this
#   parameter.

### Electronics bay sensor
#[temperature_sensor chamber]
#sensor_type: SHT21
#i2c_mcu: mcu
#i2c_bus: i2c.1
#htu21d_resolution: TEMP14_HUM12
#htu21d_report_time: 5


