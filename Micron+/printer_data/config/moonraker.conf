[server]
host: 0.0.0.0
port: 7125
# Path to klippy Unix Domain Socket
klippy_uds_address: ~/printer_data/comms/klippy.sock

[file_manager]
# post processing for object cancel. Not recommended for low resource SBCs such as a Pi Zero. Default False
enable_object_processing: True

[data_store]
temperature_store_size: 1000
gcode_store_size: 1000

[authorization]
force_logins: true
cors_domains:
    *.local
    *.lan
    *://micron.lan
    #https://mainsail.lan
    #http://mainsail.lan
    #http://*.local
    #http://*.lan
trusted_clients:
    #10.57.90.0/23
    10.57.90.100/32  ## pi5 (mainsail.lan)
    10.57.91.217/32  ## iPad Mini
    10.57.91.116/32  ## Op N100
    10.57.91.60/32  ## iPad air
    10.57.90.72/32  ## Op10Pro
    #10.57.90.190/32
    #10.57.90.72/32    
    #10.57.90.112/32
    #10.57.91.63/32
    #10.0.112.0/24
    172.16.0.0/12
    172.16.125.112/32   ## Framework
    172.16.125.111/32   ## Framework
    10.57.90.112/32  ## framework
    127.0.0.0/8
    169.254.0.0/16
    FE80::/10
    ::1/128

# enables partial support of Octoprint API
[octoprint_compat]

# enables moonraker to track and store print history.
[history]

# this enables moonraker announcements for mainsail
[announcements]
subscriptions:
    mainsail

# this enables moonraker's update manager
[update_manager]
refresh_interval: 168
enable_auto_refresh: True

[update_manager mainsail]
type: web
channel: stable
repo: mainsail-crew/mainsail
path: ~/mainsail

[update_manager mainsail-config]
type: git_repo
primary_branch: master
path: ~/mainsail-config
origin: https://github.com/mainsail-crew/mainsail-config.git
managed_services: klipper

### moonraker-timelapse
### Don't forget to include timelapse.cfg to your printer.cfg
### Uncomment to enable moonraker-timelapse

[update_manager timelapse]
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git
managed_services: klipper moonraker

# # Crowsnest update_manager entry
# [update_manager crowsnest]
# type: git_repo
# path: ~/crowsnest
# origin: https://github.com/mainsail-crew/crowsnest.git
# managed_services: crowsnest
# install_script: tools/install.sh

# Sonar update_manager entry
[update_manager sonar]
type: git_repo
path: ~/sonar
origin: https://github.com/mainsail-crew/sonar.git
primary_branch: main
managed_services: sonar
install_script: tools/install.sh

[update_manager fluidd-config]
type: git_repo
primary_branch: master
path: ~/fluidd-config
origin: https://github.com/fluidd-core/fluidd-config.git
managed_services: klipper

# [update_manager KlipperScreen]
# type: git_repo
# path: ~/KlipperScreen
# origin: https://github.com/jordanruthe/KlipperScreen.git
# virtualenv: ~/.KlipperScreen-env
# requirements: scripts/KlipperScreen-requirements.txt
# install_script: scripts/KlipperScreen-install.sh
# managed_services: KlipperScreen

[update_manager Klipper-Adaptive-Meshing-Purging]
type: git_repo
channel: dev
path: ~/Klipper-Adaptive-Meshing-Purging
origin: https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging.git
managed_services: klipper
primary_branch: main

[update_manager client z_calibration]
type: git_repo
path: /home/pi/klipper_z_calibration
origin: https://github.com/protoloft/klipper_z_calibration.git
install_script: install.sh
managed_services: klipper

[update_manager client Filaments]
type: git_repo
path: ~/filaments-klipper-extra
primary_branch: mainline
origin: https://github.com/garethky/filaments-klipper-extra.git
install_script: install.sh
managed_services: klipper

[update_manager client NozzleChange]
type: git_repo
path: ~/change-nozzle-klipper-extra
primary_branch: mainline
origin: https://github.com/garethky/change-nozzle-klipper-extra.git
install_script: install.sh
managed_services: klipper

[update_manager mobileraker]
type: git_repo
path: ~/mobileraker_companion
origin: https://github.com/Clon1998/mobileraker_companion.git
primary_branch:main
managed_services: mobileraker
virtualenv: ~/mobileraker-env
requirements: scripts/mobileraker-requirements.txt
install_script: scripts/install.sh

[spoolman]
server: http://mainsail.lan:7912


# [update_manager Spoolman]
# type: zip
# channel: stable
# repo: Donkie/Spoolman
# path: /home/pi/Spoolman
# virtualenv: .venv
# requirements: requirements.txt
# persistent_files:
#   .venv
#   .env
# managed_services: Spoolman


[update_manager pgcode]
type: git_repo
primary_branch: main
origin: https://github.com/Kragrathea/pgcode.git
path: ~/pgcode
is_system_service: False


[update_manager beacon]
type: git_repo
channel: dev
path: ~/beacon_klipper
origin: https://github.com/beacon3d/beacon_klipper.git
virtualenv: ~/klippy-env
requirements: requirements.txt
install_script: install.sh
is_system_service: False
managed_services: klipper
info_tags:
  desc=Beacon Surface Scanner

# [update_manager cartographer]
# type: git_repo
# path: ~/cartographer-klipper
# channel: dev
# origin: https://github.com/Cartographer3D/cartographer-klipper.git
# virtualenv: ~/klippy-env
# requirements: requirements.txt
# install_script: install.sh
# is_system_service: False
# managed_services: klipper
# info_tags:
#   desc=Cartographer Probe
# 
# [update_manager CartographerSurveyBeta]
# type: git_repo
# path: ~/Carto_TAP
# origin: ssh+git://git@github.com:Cartographer3D/Carto_TAP.git
# virtualenv: ~/klippy-env
# install_script: install.sh
# is_system_service: False
# managed_services: klipper
# requirements: requirements.txt 
# info_tags:
#   desc=Cartographer Survey - BETA

[update_manager vim-monokai]
type: git_repo
primary_branch: master
origin: https://github.com/sickill/vim-monokai.git
path: ~/.vim/colors/monokai
is_system_service: False
info_tags:
  desc=VIM colorscheme Monokai

[update_manager led_effect]
type: git_repo
path: ~/klipper-led_effect
origin: https://github.com/julianschill/klipper-led_effect.git
is_system_service: False

#
# [Include Directives](https://moonraker.readthedocs.io/en/latest/configuration/#include-directives)
#
#[include mqtt.conf]
#[include button.conf]
#[include notifier.conf]
[include power.conf]

[include wled.conf]
#[include webcam.conf]
[include timelapse.conf]


# vim: set ft=cfg ts=4 sts=0 sw=2 et nofen :
