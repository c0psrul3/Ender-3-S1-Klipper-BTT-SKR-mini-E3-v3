#####################################
#        Nozzle Clean Macro         #
#       Version 1.5  2023-1-31      #
#####################################

###############################
######### WIPE_NOZZLE #########
###############################
[gcode_macro WIPE_NOZZLE]
description: Clean Nozzle (default: HOT=True)
    Usage: WIPE_NOZZLE HOT=[True|False]  (default: HOT=true)
variable_pre_hot: True
gcode:
    {% set initial_z = printer.toolhead.position.z %} ; Store initial position
    CLEAN_NOZZLE HOT={params.HOT|default(pre_hot)}
    G1 Z{initial_z} F1000 ; Return to initial Z height


################################
######### CLEAN_NOZZLE #########
################################
[gcode_macro CLEAN_NOZZLE]
description: Clean Nozzle - cold: HOT=False, hot: [HOT=True] (default = hot)
   Usage: CLEAN_NOZZLE [PURGE=50] [HOT=True|False] [TARGET={filament_installed_temp}]
variable_start_x: 45
variable_start_y: -19    ## -16 - -20
variable_start_z: 1.1
variable_bucket_offset: 65
variable_wipe_axis: 'x'
variable_wipe_dist: 50
variable_wipe_qty: 10
variable_wipe_spd: 100
variable_raise_distance: 5
variable_status_heat: 'STATUS_HEATING'
variable_status_clean: 'STATUS_CLEANING'
variable_ready_status: 'STATUS_READY'
variable_parameter_TARGET: ''
variable_parameter_PURGE: 1
variable_nozzle_multiplier: 0.90
gcode:
    { status_clean }
    {% set extruder = printer.toolhead.extruder %}
    {% set filament_installed_name = printer.extruder.filament.name|string %}
    {% set filament_installed_temp = printer.extruder.filament.extruder|float %}
    {% set nozzle_clean_temp = (params.TARGET|default(filament_installed_temp)|float * nozzle_multiplier) %}
    {% set is_hot           = params.HOT|string %}
    {% if (params.PURGE|default(1)|int) > 0 %}
        {% set max_velocity     = printer.configfile.settings['extruder'].max_extrude_only_velocity | default(100) | int %}
        {% set PURGE_SPEED      = printer.save_variables.variables.filament_load_speed | default(max_velocity) | float %}
        {% set PURGE_RETRACT    = printer.configfile.settings['firmware_retraction'].retract_length | default(5) | float %}
        {% if (params.PURGE|default(1)|int) > 1 %}
            {% set PURGE_DIST   = params.PURGE|int %}
        {% else %}
            {% set PURGE_DIST   = printer.save_variables.variables.filament_load_distance|int %}
        {% endif %} 
    {% endif %} 
    # Ensure Extruder is Homed
    HOME_IF_NEEDED
    { status_clean }

    {% if params.TARGET %}
        SET_HEATER_TEMPERATURE HEATER={extruder} TARGET={nozzle_clean_temp}
        TEMPERATURE_WAIT SENSOR={extruder} MINIMUM={nozzle_clean_temp}
    {% elif (printer.extruder.can_extrude|lower != 'true') or (nozzle_clean_temp|float > printer.extruder.target|float) %} ; checking for minimum extrusion temperature
        ; is_hot determined by previous target temp, override with params.HOT
        {% if (is_hot|lower != 'false') %}
            {% if (is_hot|lower == 'true') %}
                HEAT_EXTRUDER_AND_WAIT
            {% else %}
                SET_HEATER_TEMPERATURE HEATER={extruder} TARGET={nozzle_clean_temp}
                RESPOND TYPE=echo MSG='{"Waiting for Nozzle Temp %.0f°C" % nozzle_clean_temp}'
                HOME_IF_NEEDED  ; Home extruder while waiting for nozzle temp
                TEMPERATURE_WAIT SENSOR={extruder} MINIMUM={nozzle_clean_temp}
            {% endif %}
        {% elif (filament_installed_temp|float > printer.extruder.target|float) %}
            RESPOND TYPE=error MSG='{"Extruder Target (%.0f°C) less than %.0f°C (%s)" % (printer.extruder.target, filament_installed_temp, filament_installed_name|pprint)}'
        {% endif %}
    {% endif %}

    ## Move nozzle to start position
    G90 ; absolute positioning
    G1 X{start_x} Y{start_y} F1500
    G1 Z{start_z} F1500

    {% if params.PURGE %}
        G91 ; relative movement
        G0 X{bucket_offset} Z{raise_distance} F1500 ; put nozzle over purge bucket
        G1 E{PURGE_DIST} F{PURGE_SPEED}
    {% endif %}

    ## Do Wipe nozzle
    {% for wipes in range(1, (wipe_qty + 1)) %}
        G90 ; absolute positioning
        {% if wipe_axis|lower == 'x' %}
            G1 X{start_x + wipe_dist} F{wipe_spd * 60}
            G1 X{start_x} F{wipe_spd * 60}
        {% elif wipe_axis|lower == 'y' %}
            G1 Y{start_y + wipe_dist} F{wipe_spd * 60}
            G1 Y{start_y} F{wipe_spd * 60}
        {% else %}
            RESPOND TYPE=error MSG='{ "INVALID WIPE AXIS CONFIGURATION \"%s\"" % (wipe_axis|pprint) }'
        {% endif %}     
    {% endfor %}


    ## Raise nozzle
    SAFE_LIFT_Z Z={raise_distance} F=3000         ; move to the front of the printer to

    ## Cooldown if not previously hot
    {% if is_hot|lower == "false" %}
        SET_HEATER_TEMPERATURE HEATER={extruder} MINIMUM=0
    {% endif %}

    { ready_status }    ; Set led effect "ready"

## Simply wipe the nozzle
[gcode_macro WIPE_NOZZLE]
variable_X: 0
variable_Y: 0
variable_Z: 0
gcode:
    ## Move nozzle to start position
    G1 X{params.X} Y{params.Y} F6000
    G1 Z{params.Z} F1500

    ## Do Wipe nozzle
    {% for wipes in range(1, (wipe_qty + 1)) %}
        {% if wipe_axis|lower == 'x' %}
            G1 X{params.X + wipe_dist} F{wipe_spd * 60}
            G1 X{params.X} F{wipe_spd * 60}
        {% elif wipe_axis|lower == 'y' %}
            G1 Y{params.Y + wipe_dist} F{wipe_spd * 60}
            G1 Y{params.Y} F{wipe_spd * 60}
        {% else %}
            RESPOND TYPE=error MSG='{ "INVALID WIPE AXIS CONFIGURATION \"%s\"" % (wipe_axis|pprint) }'
        {% endif %}     
    {% endfor %}


##
## CLEAN_NOZZLE - G12
## ------------------
## [G12 - Clean the Nozzle](https://marlinfw.org/docs/gcode/G012.html)
##
[gcode_macro G12]
gcode:
    CLEAN_NOZZLE



