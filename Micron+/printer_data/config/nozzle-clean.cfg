#####################################
#        Nozzle Clean Macro         #
#       Version 1.5  2023-1-31      #
#####################################

###############################
######### WIPE_NOZZLE #########
###############################
[gcode_macro WIPE_NOZZLE]
description: Clean Nozzle (default: HOT=True)
    Usage: WIPE_NOZZLE HOT=[True|False]  (default: HOT=true)
variable_pre_hot: True
gcode:
    {% set initial_z = printer.toolhead.position.z %} ; Store initial position
    CLEAN_NOZZLE HOT={params.HOT|default(pre_hot)}
    G1 Z{initial_z} F1000 ; Return to initial Z height


################################
######### CLEAN_NOZZLE #########
################################
[gcode_macro CLEAN_NOZZLE]
description: Clean Nozzle - cold: HOT=False, hot: [HOT=True] (default = hot)
   Usage: CLEAN_NOZZLE [HOT=True|False] [TARGET={filament_installed_temp}]
variable_start_x: 45
variable_start_y: -19    ## -16 - -20
variable_start_z: 1.1
variable_wipe_axis: 'x'
variable_wipe_dist: 50
variable_wipe_qty: 10
variable_wipe_spd: 100
variable_raise_distance: 25
variable_status_heat: 'STATUS_HEATING'
variable_status_clean: 'STATUS_CLEANING'
variable_ready_status: 'STATUS_READY'
variable_parameter_TARGET: ''
variable_nozzle_multiplier: 0.90
gcode:
    { status_clean }
    {% set extruder = printer.toolhead.extruder %}
    {% set filament_installed_name = printer.extruder.filament.name|string %}
    {% set filament_installed_temp = printer.extruder.filament.extruder|float %}

    {% set nozzle_clean_temp = (params.TARGET|default(filament_installed_temp)|float * nozzle_multiplier) %}
    {% set is_hot = params.HOT|string %}

    {% if params.TARGET %}
        SET_HEATER_TEMPERATURE HEATER={extruder} TARGET={nozzle_clean_temp}
        TEMPERATURE_WAIT SENSOR={extruder} MINIMUM={nozzle_clean_temp}
    {% elif (printer.extruder.can_extrude|lower != 'true') or (nozzle_clean_temp|float > printer.extruder.target|float) %} ; checking for minimum extrusion temperature
        ; is_hot determined by previous target temp, override with params.HOT
        {% if (is_hot|lower != 'false') %}
            {% if (is_hot|lower == 'true') %}
                HEAT_EXTRUDER_AND_WAIT
            {% else %}
                SET_HEATER_TEMPERATURE HEATER={extruder} TARGET={nozzle_clean_temp}
                RESPOND TYPE=echo MSG='{"Waiting for Nozzle Temp %.0f°C" % nozzle_clean_temp}'
                HOME_IF_NEEDED  ; Home extruder while waiting for nozzle temp
                TEMPERATURE_WAIT SENSOR={extruder} MINIMUM={nozzle_clean_temp}
                SET_HEATER_TEMPERATURE HEATER={extruder} MINIMUM=0  ; allow nozzle to cool down while cleaning
            {% endif %}
            #SET_HEATER_TEMPERATURE HEATER={extruder} TARGET={nozzle_clean_temp}
            #TEMPERATURE_WAIT SENSOR={extruder} MINIMUM={nozzle_clean_temp}
        {% elif (filament_installed_temp|float > printer.extruder.target|float) %}
            RESPOND TYPE=error MSG='{"Extruder Target (%.0f°C) less than %.0f°C (%s)" % (printer.extruder.target, filament_installed_temp, filament_installed_name|pprint)}'
        {% endif %}
    {% endif %}

    # Ensure Extruder is Homed
    HOME_IF_NEEDED
    { status_clean }
    G90     ; absolute positioning
    ## Move nozzle to start position
    G1 X{start_x} Y{start_y} F6000
    G1 Z{start_z} F1500

    ## Do Wipe nozzle
    {% for wipes in range(1, (wipe_qty + 1)) %}
        {% if wipe_axis|lower == 'x' %}
            G1 X{start_x + wipe_dist} F{wipe_spd * 60}
            G1 X{start_x} F{wipe_spd * 60}
        {% elif wipe_axis|lower == 'y' %}
            G1 Y{start_y + wipe_dist} F{wipe_spd * 60}
            G1 Y{start_y} F{wipe_spd * 60}
        {% else %}
            RESPOND TYPE=error MSG='{ "INVALID WIPE AXIS CONFIGURATION \"%s\"" % (wipe_axis|pprint) }'
        {% endif %}     
    {% endfor %}
    ## Raise nozzle
    SAFE_LIFT_Z Z={raise_distance} F=3000         ; move to the front of the printer to
    ## Cooldown if not previously hot
    {% if is_hot|lower == "false" %}
        SET_HEATER_TEMPERATURE HEATER={extruder} MINIMUM=0
    {% endif %}
    { ready_status }    ; Set led effect "ready"


##
## CLEAN_NOZZLE - G12
## ------------------
## [G12 - Clean the Nozzle](https://marlinfw.org/docs/gcode/G012.html)
##
[gcode_macro G12]
gcode:
    CLEAN_NOZZLE


## old/generic macro: wipe_nozzle
#[gcode_macro WIPE_NOZZLE]
#gcode:
#  {% set repetitions = params.repetitions|int if params.repetitions is defined else 6 %} ; Number of repetitions
#  {% set initial_z = printer.toolhead.position.z %} ; Store initial position
#  G90 ; Absolute positioning
#  G1 X235 Y0 Z3 F100 ; Move to wipe position
#  G1 X235 Y0 Z0 F100 ; Move to wipe position
#    {% for i in range(repetitions) %} ; Wipe nozzle back and forth for repetitions
#      G91
#      G1 Y+35 F100
#      G1 Y-35 F100
#    {% endfor %}
#    G90
#    G1 Z{initial_z} F1000 ; Return to initial Z height



