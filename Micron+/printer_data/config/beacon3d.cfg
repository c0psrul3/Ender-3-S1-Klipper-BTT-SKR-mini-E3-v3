#
# Beacon 3D
# ---------
# [Beacon3D - Config](https://docs.beacon3d.com/config/)
# [Beacon3D - Calibration](https://docs.beacon3d.com/quickstart/#6-calibrate-beacon)
#
[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_D6D31D365154354D38202020FF0A3915-if00
speed: 3
#   Z probing dive speed.
lift_speed: 5.
#   Z probing lift speed.
#backlash_comp: 0.5
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
x_offset: 0
y_offset: 30
trigger_distance: 2.
#   Beacon trigger distance for homing.
#trigger_dive_threshold: 1.
#   Threshold for range vs dive mode probing. Beyond `trigger_distance +
#   trigger_dive_threshold` a dive will be used.
#trigger_hysteresis: 0.006
#   Hysteresis on trigger threshold for untriggering, as a percentage of the
#   trigger threshold.
#z_settling_time: 5
#   Delay (in ms) for the Z axis to settle before taking proximity measurements.
cal_nozzle_z: 0.1
#   Expected nozzle offset after completing manual Z offset calibration.
#cal_floor: 0.2
#   Minimum z bound on sensor response measurement.
#cal_ceil: 5.
#   Maximum z bound on sensor response measurement.
cal_speed: 2.
#   Speed while measuring response curve.
#cal_move_speed: 10.
#   Speed while moving to position for response curve measurement.
default_model_name: default
#   Name of default beacon model to load.
mesh_main_direction: x
#   Primary travel direction during mesh measurement.
#mesh_overscan: -1
#   Distance to use for direction changes at mesh line ends. Omit this setting
#   and a default will be calculated from line spacing and available travel.
#mesh_cluster_size: 1
#   Radius of mesh grid point clusters.
mesh_runs: 2
#   Number of passes to make during mesh scan.
#zero_reference_cluster_size: 1.
#   Radius of cluster used for zero reference position, this is the equivalent
#   of mesh_cluster_size for the zero reference position.
#accel_scale: 16g
#   Adjust the sensitivity of the accelerometer during shaper measurement,
#   valid settings on RevH are 16g, 8g, 4g and 2g.
#accel_axes_map: x, y, z
#   Reassign or invert axes of the accelerometer to align with machine coordinates.
default_probe_method: proximity ## contact
# Sets the default probing method for mesh, tilt, qgl, probe, etc.
contact_max_hotend_temperature: 180 # increase to enable hot contacting
# Temperature limit for the hotend when contacting, override this for temps which may damage some surfaces.
contact_sensitivity: 2
# Adjusts noise tolerance of contact processing. Values 0-3 are valid, with 3 tolerating the most noise.
contact_latency_min: 1
# Limits how low of a latency contact is allowed to advance.

# # new additions for beacon safe_z_home functionality
# home_z_hop: 3
# # Distance to retract before x/y homing moves.
# home_z_hop_speed: 30
# # Retraction speed for z hop.
# home_xy_move_speed: 150
# # Speed for moving to home_xy_position.
# #home_y_before_x: False
# # If set, the Y axis will home first when using the beacon safe_z_home

# # new additions for setting default homing mode
# home_method: contact # use proximity for induction homing
# # Sets default homing method used by G28. `proximity` requires a valid beacon model to be loaded.
# home_method_when_homed: proximity # after initial calibration use induction (defaults to `home_method` value)
# # Sets the homing method when the machine is already in a homed state.
# home_autocalibrate: unhomed # contact will calibrate beacon on first home
# # Sets the autocalibration behavior. `always` will autocal on every home, `unhomed` on initial homing,
# # `never` will never so that models stored in config may be used with proximity homing.

# home_gcode_pre_x: _HOME_PRE_AXIS AXIS=X
# # Enables a gcode macro before homing the x axis
# home_gcode_post_x: _HOME_POST_AXIS AXIS=X
# # Enables a gcode macro after homing the x axis
# home_gcode_pre_y: _HOME_PRE_AXIS AXIS=Y
# # Enables a gcode macro before homing the y axis
# home_gcode_post_y: _HOME_POST_AXIS AXIS=Y
# # Enables a gcode macro after homing the x axis

# new autocalibration config options
autocal_speed: 3
# Speed during contact movement. Probing outside of 2-5mm/s not recommended and at your own risk.
#autocal_accel: 100
# Acceleration of autocal movement.
autocal_retract_dist: 2
# Retract distance between autocal samples.
#autocal_retract_speed: 10
# Speed of autocal retraction move.
autocal_sample_count: 3
# Number of samples used for each autocal.
autocal_tolerance: 0.010  ## 0.008
# Acceptance tolerance for an autocal result.
autocal_max_retries: 5
# Number of retry attempts permitted when tolerance is exceeded.



# 
# 4:15 PM
# BEACON_POKE
# 4:15 PM
# Poke test at (90.000,65.000), from 5.000 to -0.300, at 3.000 mm/s
# 4:15 PM
# Armed at:     z=4.69378
# 4:15 PM
# Triggered at: z=0.16620 with latency=4
# 4:15 PM
# Overshoot:    51.250 um
# 4:15 PM
# BEACON_POKE
# 4:15 PM
# Poke test at (90.000,65.000), from 5.000 to -0.300, at 3.000 mm/s
# 4:15 PM
# Armed at:     z=4.69407
# 4:15 PM
# Triggered at: z=0.16370 with latency=4
# 4:15 PM
# Overshoot:    50.000 um
# 4:15 PM
# BEACON_POKE
# 4:15 PM
# Poke test at (90.000,65.000), from 5.000 to -0.300, at 3.000 mm/s
# 4:15 PM
# Armed at:     z=4.69453
# 4:15 PM
# Triggered at: z=0.16370 with latency=4
# 4:15 PM
# Overshoot:    50.000 um
# 
# 
# 4:23 PM
# BEACON_POKE
# 4:23 PM
# Poke test at (90.000,65.000), from 5.000 to -0.300, at 3.000 mm/s
# 4:23 PM
# Armed at:     z=4.69342
# 4:23 PM
# Triggered at: z=0.17472 with latency=4
# 4:23 PM
# Overshoot:    50.000 um
# 4:23 PM
# BEACON_POKE
# 4:23 PM
# Poke test at (90.000,65.000), from 5.000 to -0.300, at 3.000 mm/s
# 4:23 PM
# Armed at:     z=4.69437
# 4:23 PM
# Triggered at: z=0.17472 with latency=4
# 4:23 PM
# Overshoot:    55.000 um
# 4:23 PM
# BEACON_POKE
# 4:23 PM
# Poke test at (90.000,65.000), from 5.000 to -0.300, at 3.000 mm/s
# 4:23 PM
# Armed at:     z=4.69873
# 4:23 PM
# Triggered at: z=0.17222 with latency=5
# 4:23 PM
# Overshoot:    57.500 um
# 


# Input Shaping
[resonance_tester]
accel_chip: beacon
probe_points: 90, 90, 20


# [temperature_sensor Beacon_RevH]
# sensor_type: temperature_mcu
# sensor_mcu: beacon


[bed_mesh]
speed: 500
probe_count: 50,50
horizontal_move_z: 5
zero_reference_position: 90, 65   ## allow safe_z_home position to define zero z-height


[safe_z_home]
speed: 200


[delayed_gcode primary_probe]
initial_duration: 1.
gcode:
  {% set PROBE_NAME = "beacon3d" %}
  {action_respond_info("Primary Probe = %s" % PROBE_NAME)}
  SAVE_VARIABLE VARIABLE=primaryprobe VALUE='"{PROBE_NAME}"'


[gcode_macro BEACON_AUTO_CALIBRATE_Z]
description: Do Beacon Auto Calibrate Z-offset. Uses Contact to find zero and perform a BEACON_CALIBRATE routine automatically. Perform calibration at 'home_xy_position'. SKIP_MODEL_CREATION will skip the scan mode model calibration.
variable_do_qgl: 1
gcode:
    STATUS_HOMING
    SET_GCODE_OFFSET Z=0
    {% if not 'xyz' in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    {% if (params.QGL|default(do_qgl)|int) == 1 %}
        QUAD_GANTRY_LEVEL
    {% endif %}

    # Calibrate z_offset at home_xy_position
    # [Beacon Docs: Contact Auto-Calibration](https://docs.beacon3d.com/contact/#42-contact-auto-calibration-with-induction-homing)
    G28 Z METHOD=CONTACT CALIBRATE=1


[gcode_macro PROBE_CALIBRATE]
gcode:
    # Calibrate z_offset at home_xy_position
    # [Beacon Docs: Contact Auto-Calibration](https://docs.beacon3d.com/contact/#42-contact-auto-calibration-with-induction-homing)
    G28 Z METHOD=CONTACT CALIBRATE=1


## ----------------------------------------------------------
## Beacon Models for various build-plates
##

[gcode_macro LIST_BEACON_MODELS]
gcode:
    BEACON_MODEL_LIST

[delayed_gcode restore_model_build_sheet_installed]
initial_duration: 1.
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set installed_sheet = svv["build_sheet installed"] | string %}
    {% set sheet = svv[installed_sheet] | default(None) %}
    {action_respond_info("Restoring Last Installed Build Sheet Model: %s" % (sheet.name|string))}
    BEACON_MODEL_SELECT NAME={sheet.name|string}

[gcode_macro BEACON_CURRENT_MODEL]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set sheet_key = svv["build_sheet installed"] | string %}
    {% set sheet = svv[sheet_key] | default(None) %}
    {% set model_key = ("beacon model " ~ (sheet.name | lower | replace(" ", "_"))) %}
    #{action_respond_info("DEBUG: Current Model: %s" % (model_key|string))}
    {% set model_offset = printer.configfile.settings[model_key].model_offset|float %}
    RESPOND TYPE=command MSG='{"Installed sheet: %s, Offset: %.3fmm" % (sheet.name, model_offset)}'

# [gcode_macro INSTALL_HONEYBADGER_BLACK_PEI]
# variable_sheet_name: "honeybadger_black_pei"
# gcode:
#     BEACON_MODEL_SELECT NAME={sheet_name}
#     {action_respond_info("Installing Build Sheet %s" % (sheet_name | pprint | string))}
# 
# [gcode_macro INSTALL_FULAMENT_PEI]
# variable_sheet_name: "fulament_pei"
# gcode:
#     BEACON_MODEL_SELECT NAME={sheet_name}
#     {action_respond_info("Installing Build Sheet %s" % (sheet_name | pprint | string))}
# 
# [gcode_macro INSTALL_DARKROCK_PEI]
# variable_sheet_name: "darkrock_pei"
# gcode:
#     BEACON_MODEL_SELECT NAME={sheet_name}
#     {action_respond_info("Installing Build Sheet %s" % (sheet_name | pprint | string))}
# 
# [gcode_macro INSTALL_WEST3D_SMOOTH_PEI]
# variable_sheet_name: "west3d_smooth_pei"
# gcode:
#     BEACON_MODEL_SELECT NAME={sheet_name}
#     {action_respond_info("Installing Build Sheet %s" % (sheet_name | pprint | string))}
# 
# [gcode_macro INSTALL_WEST3D_TEXTURED_PEI]
# variable_sheet_name: "west3d_textured_pei"
# gcode:
#     BEACON_MODEL_SELECT NAME={sheet_name}
#     {action_respond_info("Installing Build Sheet %s" % (sheet_name | pprint | string))}
# 
# [gcode_macro INSTALL_DFH_SMOOTH_PEI]
# variable_sheet_name: "dfh_smooth_pei"
# gcode:
#     BEACON_MODEL_SELECT NAME={sheet_name}
#     {action_respond_info("Installing Build Sheet %s" % (sheet_name | pprint | string))}
# 
# [gcode_macro INSTALL_DFH_TEXTURED_PEI]
# variable_sheet_name: "dfh_textured_pei"
# gcode:
#     BEACON_MODEL_SELECT NAME={sheet_name}
#     {action_respond_info("Installing Build Sheet %s" % (sheet_name | pprint | string))}



### ---------
### TRASH BIN

# [homing_override]
# gcode:
#     {% set HOME_CURRENT = 0.5 %}
#     {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
#     {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
#     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
#     G28 XY
#     G28 Z METHOD=CONTACT CALIBRATE=1    ; calibrate z offset and beacon model
#     # Make sure StallGuard registers are cleared
#     M400
#     # Set current during print
#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
#     SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
# axes: xyz
# #set_position_x:
# #set_position_y:
# #set_position_z:
# #   If specified, the printer will assume the axis is at the specified
# #   position prior to running the above g-code commands. Setting this
# #   disables homing checks for that axis. This may be useful if the
# #   head must move prior to invoking the normal G28 mechanism for an
# #   axis. The default is to not force a position for an axis.
#
#
# ##
# ## requires the following [beacon] settings:
# # # home_gcode_pre_x: _HOME_PRE_AXIS AXIS=X
# # # home_gcode_post_x: _HOME_POST_AXIS AXIS=X
# # # home_gcode_pre_y: _HOME_PRE_AXIS AXIS=Y
# # # home_gcode_post_y: _HOME_POST_AXIS AXIS=Y
# [gcode_macro _HOME_PRE_AXIS]
# gcode:
#   # Adapt this for your printer.
#   {% set HOME_CURRENT = 0.5 %}
#   SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
#   SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
# 
# [gcode_macro _HOME_POST_AXIS]
# gcode:
#   {% set axis = params.AXIS %}
#   {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
#   {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
# 
#   # Move away
#   SAVE_GCODE_STATE NAME=home_post_axis
#   G91
#   G0 {axis}-10 F3600
#   RESTORE_GCODE_STATE NAME=home_post_axis
# 
#   # Make sure StallGuard registers are cleared
#   M400
#   # Set current during print
#   SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
#   SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


#BEACON_AUTO_CALIBRATE SAMPLES=5 SAMPLES_TOLERANCE=0.003 SAMPLES_TOLERANCE_RETRIES=5 SKIP_MODEL_CREATION=1
## Uses Contact to find zero and perform a BEACON_CALIBRATE routine automatically. Calibration will be performed at the machine's present X, Y coordinate. SKIP_MODEL_CREATION can be used to skip the scan mode model calibration step, and do only the z offset.

#BEACON_ESTIMATE_BACKLASH [OVERRUN=<overrun>] [PROBE_SPEED=<mm/s>] [LIFT_SPEED=<mm/s>] [Z=<z_position>] [SAMPLES=<count>]
## Estimate Z backlash using a series of ranging measurements from opposing approach directions. OVERRUN is the backoff distance between measurements.

#BED_MESH_CALIBRATE RUNS=1 PROBE_METHOD=proximity USE_CONTACT_AREA=1 ADAPTIVE=1
## Perform a bed mesh calibration. METHOD=beacon is the default and will run a scan mode mesh. METHOD=automatic will run a stop and sample or dive mode mesh, depending if the horizontal_move_z in the config is within ranging distance or not.

#PROBE PROBE_METHOD=contact
## Perform a Z probe operation. If beacon is within ranging distance, a ranging measurement is used. Otherwise a dive is made to the trigger point, and then a ranging measurement is used.

#PROBE_ACCURACY [PROBE_SPEED=<mm/s>] [SAMPLES=<count>] [LIFT_SPEED=<mms/>] [SAMPLE_RETRACT_DIST=<mm>]
## Performs multiple probe operations and calculates statistics on the samples.

#BEACON_POKE [SPEED=<speed>] [BOTTOM=<z_bottom>] [TOP=<z_top>]:
## Performs a contact operation with added safeguards for assessing performance and running experiments.

# BEACON_OFFSET_COMPARE [TOP=<z_top>]:
## Performs a comparison of contact and proximity measurements at the present position for investigating mismatches between the two modes.

[delayed_gcode restore_filament_spool_installed]
initial_duration: 1.
gcode:
    {% set filaments = printer.save_variables.variables.filaments %}
    {% for filament in filaments %}
        {% if 'extruder' in filament['_assigned_to'] %}
            {action_respond_info("Currently Loaded Filament: %s" % (filament.name|string))}
        {% endif %}
    {% endfor %}



[gcode_macro CALIBRATE_BUILDSHEET]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set installed_sheet = svv["build_sheet installed"] | string %}
    {% set sheet = svv[installed_sheet] | default(None) %}
    {action_respond_info("Cleaning nozzle before Beacon Auto Calibrate")}
    CLEAN_NOZZLE
    {action_respond_info("Calibrating Z_OFFSET with Beacon Auto Calibrate")}
    BEACON_AUTO_CALIBRATE
    {action_respond_info("Writing Last Installed Build Sheet Model: %s" % (sheet.name|string))}
    BEACON_MODEL_SAVE NAME={sheet.name|string}


